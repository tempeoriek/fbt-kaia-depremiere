@* @model CategoryNavigationModel

@using Nop.Web.Models.Catalog;


@helper RenderCategoryLine(CategorySimpleModel category)
{

    <li class="list-group-item">
        @if (category.Id == Model.CurrentCategoryId)
        {
            if ((category.SeName.Contains("sale")))
            {
                <a style="text-transform: uppercase;" href="@Url.RouteUrl("Category", new { SeName = category.SeName })" class="active sale-item">@category.Name</a>
            }
            else
            {
                <a style="text-transform: uppercase;" href="@Url.RouteUrl("Category", new { SeName = category.SeName })" class="active">@category.Name</a>
            }

        }
        else if (category.SeName.Contains("sale"))
        {

            <a style="text-transform: uppercase;" href="@Url.RouteUrl("Category", new { SeName = category.SeName })" class="sale-item">@category.Name</a>
        }
        else
        {
            <a style="text-transform: uppercase;" href="@Url.RouteUrl("Category", new { SeName = category.SeName })">@category.Name</a>
        }
    </li>


    if (category.SubCategories.Count > 0)
    {

        <li class="list-group-item">
            <ul class="list-unstyled sub-cat">

                @foreach (var subCategory in category.SubCategories)
                {
                    @RenderCategoryLine(subCategory)
                }
            </ul>
        </li>
    }

}




@if (Model.Categories.Count > 0)
{

    <div class="menu-alternate">
        <div class="row">
            <div class="col-xs-5">
                <nav role='navigation'>
                    <ul class='nav-mob'>

                        @foreach (var category in Model.Categories)
                        {
                            var onSale = "";
                            if ((category.SeName.Contains("sale")))
                            {
                                onSale = "sale-item";
                            }

                            <li data-menu='@category.SeName' class="list-group-item">

                                @if (category.Id == Model.CurrentCategoryId)
                                {
                                    <a style="text-transform: uppercase;" href="#" class="active @onSale">@category.Name</a>
                                }
                                else
                                {
                                    <a style="text-transform: uppercase;" href="#" class="@onSale">@category.Name</a>
                                }
                            </li>
                        }

                        <li data-menu="About" class="list-group-item"><a style="text-transform: uppercase;" href="@Url.RouteUrl("Topic", new {SeName = Html.GetTopicSeName("aboutus") })">@T("AboutUs")</a></li>
                        <li data-menu="Stockist" class="list-group-item"><a style="text-transform: uppercase;" href="@Url.RouteUrl("Topic", new {SeName = Html.GetTopicSeName("stockist") })">@T("stockist")</a></li>
                       
                        <li data-menu="blank1" class="list-group-item"></li>
                        <li data-menu="blank2" class="list-group-item"></li>
                        <li data-menu="Help" class="list-group-item"><a style="text-transform: uppercase;" href="#">Help</a></li>
                        <li data-menu="contact" class="list-group-item"><a style="text-transform: uppercase;" href="#">Contact</a></li>
                        <li data-menu="myaccount" class="list-group-item"><a style="text-transform: uppercase;" href="#">My account</a></li>


                    </ul>



                </nav>
            </div>
            <div class="col-xs-7">
                <div class="menu-alternate-col2 stories">

                    @foreach (var category in Model.Categories)
                    {
                 
                        <div class="subcat-mob">
                            <ul class="list-unstyled">
                                @foreach (var subCategory in category.SubCategories)
                                {
                                    @RenderCategoryLine(subCategory)
                                }
                            </ul>
                        </div>
                    }

                    @for (int i = 1; i <= 4; i++)
                    {
                        @RenderEmptyLine()
                    }

                    <div class="subcat-mob">
                        <ul class="list-unstyled">
                            <li class="list-group-item"><a style="text-transform: uppercase;" href="@Url.RouteUrl("Topic", new {SeName = Html.GetTopicSeName("faq") })">@T("FAQ")</a> </li>
                            <li class="list-group-item"><a style="text-transform: uppercase;" href="@Url.RouteUrl("Topic", new {SeName = Html.GetTopicSeName("conditionsofuse") })">@T("ConditionsOfUse")</a></li>
                            <li class="list-group-item"><a style="text-transform: uppercase;" href="@Url.RouteUrl("Topic", new {SeName = Html.GetTopicSeName("returnpolicy") })">@T("ReturnPolicy")</a> </li>
                        </ul>
                    </div>

                    Contact
                    <div class="subcat-mob">
                        <ul class="list-unstyled">
                            <li class="list-group-item"><a style="text-transform: uppercase;" href="@Url.RouteUrl("ContactUs")">Contact customer care</a></li>
                            <li class="list-group-item">Email: <a style="text-transform: uppercase;" href="mailto:info@shopforbettertomorrows.com">info@shopforbettertomorrows.com</a></li>
                        </ul>
                    </div>


                    <div class="subcat-mob">
                        <ul class="list-unstyled">
                            <li class="list-group-item"><a style="text-transform: uppercase;" href="@Url.RouteUrl("CustomerInfo")">@T("Account.CustomerInfo")</a></li>
                            <li class="list-group-item"><a style="text-transform: uppercase;" href="@Url.RouteUrl("CustomerAddresses")">@T("Account.CustomerAddresses")</a></li>
                            <li class="list-group-item"><a style="text-transform: uppercase;" href="@Url.RouteUrl("CustomerChangePassword")">@T("Account.ChangePassword")</a></li>
                            <li class="list-group-item"><a style="text-transform: uppercase;" href="@Url.RouteUrl("CustomerOrders")">@T("Account.CustomerOrders")</a></li>
                           
                            <li class="list-group-item"><a style="text-transform: uppercase;" href="~/Order/ConfirmPayment">Confirm payment</a></li>
                            <li class="list-group-item"></li>
                            <li class="list-group-item"></li>

                            @if (!Model.IsAuthenticated)
                            {
                                <li class="list-group-item"><a style="text-transform: uppercase;" href="@Url.RouteUrl("Login")">@T("Account.Login")</a></li>
                                <li class="list-group-item"><a style="text-transform: uppercase;" href="@Url.RouteUrl("Register")" class="ico-register">@T("Account.Register")</a></li>
                            }
                            else
                            {
                                <li class="list-group-item"><a style="text-transform: uppercase;" href="@Url.RouteUrl("Logout")">@T("Account.Logout")</a></li>
                            }
                        </ul>



                    </div>

                </div>
            </div>
        </div>
    </div>

}


@helper RenderEmptyLine()
{
    <div class="subcat-mob">
        <ul class="list-unstyled">
            <li class="list-group-item"></li>
        </ul>
    </div>

} *@

@model CategoryNavigationModel
@using Nop.Web.Models.Catalog;



@functions{
    public bool BreadCrumbContainsCurrentCategoryId(CategorySimpleModel category)
    {
        if (Model.CurrentCategoryId == 0)
            return false;

        if (category.Id == Model.CurrentCategoryId)
            return true;

        foreach (var subCategory in category.SubCategories)
        {
            if (BreadCrumbContainsCurrentCategoryId(subCategory))
            {
                return true;
            }
        }

        return false;
    }
}


@helper RenderCategoryMobile(CategorySimpleModel category)
{
    bool active = category.Id == Model.CurrentCategoryId || category.SubCategories.Count(BreadCrumbContainsCurrentCategoryId) > 0;
    bool last = category.Id == Model.CurrentCategoryId;
    string liClass = active ? "active" : "inactive";

    if (last)
    {
        liClass += " last";
    }
    <li><a href="@Url.RouteUrl("Category", new { SeName = category.SeName })">@category.Name</a></li>

}

@helper RenderCategoryMobileCollection(CategorySimpleModel category)
{
    bool active = category.Id == Model.CurrentCategoryId || category.SubCategories.Count(BreadCrumbContainsCurrentCategoryId) > 0;
    bool last = category.Id == Model.CurrentCategoryId;
    string liClass = active ? "active" : "inactive";

    if (last)
    {
        liClass += " last";
    }
    <li><a href="@Url.RouteUrl("Category", new { SeName = category.SeName })">@category.Name</a></li>
}


@{
    var liCollapse = (Model.CurrentCategoryId > 0) ? "" : "collapse";
    var parentId = (ViewBag.isMobile != null) ? "phmenu-mobile" : "phmenu";
    var divId = (ViewBag.isMobile != null) ? "shop-mobile" : "shop";

}


@*Mobile Version*@
<div class="d-block d-md-none" style="margin-top: 2vh;">
    @foreach (var category in Model.Categories)
    {
        <div class="dropright dropright-list">
            <a style="text-transform: uppercase;" href="#" class="menu-right-mobile" data-toggle="collapse" data-target="#collapse-@category.SeName" aria-expanded="false" aria-controls="collapse-@category.SeName">@category.Name</a>
            <div class="collapse c-@category.SeName" id="collapse-@category.SeName" style="list-style:none; margin-left: 10px;">

                @foreach (var subcat in category.SubCategories)
                {
                    @RenderCategoryMobile(subcat)
                }

            </div>
        </div>
    }

    <div class="dropright dropright-list">
        <a style="text-transform: uppercase;" href="@Url.RouteUrl("Topic", new {SeName = Html.GetTopicSeName("aboutus") })">@T("AboutUs")</a>
    </div>
    @* <div class="dropright dropright-list">
        <a style="text-transform: uppercase;" href="@Url.RouteUrl("Topic", new {SeName = Html.GetTopicSeName("stockist") })">@T("stockist")</a>
    </div> *@
    <div class="dropright dropright-list" style="margin-top: 40px;">
        <a style="text-transform: uppercase;" href="#" class="menu-right-mobile" data-toggle="collapse" data-target="#collapse-help" aria-expanded="false" aria-controls="collapse-help">Help</a>
        <div class="collapse c-help" id="collapse-help" style="list-style:none; margin-left: 10px;">
            <li><a style="text-transform: capitalize;" href="@Url.RouteUrl("Topic", new {SeName = Html.GetTopicSeName("faq") })">@T("FAQ")</a> </li>
            <li><a style="text-transform: capitalize;" href="@Url.RouteUrl("Topic", new {SeName = Html.GetTopicSeName("conditionsofuse") })">@T("ConditionsOfUse")</a></li>
            <li><a style="text-transform: capitalize;" href="@Url.RouteUrl("Topic", new {SeName = Html.GetTopicSeName("returnpolicy") })">@T("ReturnPolicy")</a> </li>
        </div>
    </div>
    <div class="dropright dropright-list">
        <a style="text-transform: uppercase;" href="#" class="menu-right-mobile" data-toggle="collapse" data-target="#collapse-contact" aria-expanded="false" aria-controls="collapse-contact">Contact</a>
        <div class="collapse c-contact" id="collapse-contact" style="list-style:none; margin-left: 10px;">
            <li><a href="@Url.RouteUrl("ContactUs")">Contact customer care</a></li>
            <li>Email: <a href="mailto:info@shopforbettertomorrows.com">info@shopforbettertomorrows.com</a></li>
        </div>
    </div>
    <div class="dropright dropright-list">
        <a style="text-transform: uppercase;" href="#" class="menu-right-mobile" data-toggle="collapse" data-target="#collapse-account" aria-expanded="false" aria-controls="collapse-account">My account</a>
        <div class="collapse c-account" id="collapse-account" style="list-style:none; margin-left: 10px;">
            <li><a href="@Url.RouteUrl("CustomerInfo")">@T("Account.CustomerInfo")</a></li>
            <li><a href="@Url.RouteUrl("CustomerAddresses")">@T("Account.CustomerAddresses")</a></li>
            <li><a href="@Url.RouteUrl("CustomerChangePassword")">@T("Account.ChangePassword")</a></li>
            <li><a href="@Url.RouteUrl("CustomerOrders")">@T("Account.CustomerOrders")</a></li>
            <li><a href="~/Order/ConfirmPayment">Confirm payment</a></li>
            
            

            @if (!Model.IsAuthenticated)
            {
                <li><a href="@Url.RouteUrl("Login")">@T("Account.Login")</a></li>
                <li><a href="@Url.RouteUrl("Register")" class="ico-register">@T("Account.Register")</a></li>
            }
            else
            {
                <li><a href="@Url.RouteUrl("Logout")">@T("Account.Logout")</a></li>
            }
        </div>
    </div>
</div>
